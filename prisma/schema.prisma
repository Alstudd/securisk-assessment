generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model QuestionBank {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  topic     String
  subtopics Subtopic[]
  userId    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quizzes   Quiz[]

  @@map("question_banks")
}

model Quiz {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  userId         String
  accessEmails   String[]       @default([])
  questionBankId String         @db.ObjectId
  questionBank   QuestionBank   @relation(fields: [questionBankId], references: [id], onDelete: Cascade)
  questions      QuizQuestion[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  @@map("quizzes")
}

model Subtopic {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  questionSets   QuestionSet[]
  questionBankId String         @db.ObjectId
  questionBank   QuestionBank   @relation(fields: [questionBankId], references: [id], onDelete: Cascade)
  QuizQuestion   QuizQuestion[]

  @@map("subtopics")
}

model QuestionSet {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  quest      String
  options    String[]
  subtopicId String   @db.ObjectId
  subtopic   Subtopic @relation(fields: [subtopicId], references: [id], onDelete: Cascade)

  @@map("question_sets")
}

model QuizQuestion {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  quizId     String   @db.ObjectId
  quiz       Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quest      String
  options    String[]
  subtopic   Subtopic @relation(fields: [subtopicId], references: [id], onDelete: Cascade)
  subtopicId String   @db.ObjectId

  @@map("quiz_questions")
}
